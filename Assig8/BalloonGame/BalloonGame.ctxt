#BlueJ class context
comment0.params=
comment0.target=BalloonGame()
comment0.text=\ Construct\ a\ new\ BalloonGame\ object\n\ and\ set\ up\ the\ GUI\n
comment1.params=cmd
comment1.target=void\ buttonPerformed(java.lang.String)
comment1.text=Respond\ to\ button\ presses
comment2.params=
comment2.target=void\ start()
comment2.text=\ Start\ the\ game,\ with\ no\ overlaps\n\ \ \ \ \ \ \ \ Clear\ the\ graphics\ pane\n\ \ \ \ \ \ \ \ Initialise\ the\ score\ information\ (the\ total\ penalty\ so\ far)\n\ \ \ \ \ \ \ \ Make\ a\ new\ set\ of\ Balloons\ at\ random\ positions\n\ \ \ \ \ \ \ \ Report\ the\ score\n
comment3.params=action\ x\ y
comment3.target=void\ mousePerformed(java.lang.String,\ double,\ double)
comment3.text=\ Find\ the\ balloon\ at\ (x,y)\ if\ any,\n\ \ \ \ \ \ \ \ Expand\ it\ \n\ \ \ \ \ \ \ \ Check\ whether\ it\ is\ touching\ another\ balloon,\n\ \ \ \ \ \ \ \ If\ so,\ update\ the\ penalty,\ pop\ both\ balloons,\ and\ remove\ them\ from\ the\ array\n\ \ \ \ \ \ \ \ Report\ the\ current\ score.\n\ \ \ \ \ \ \ \ If\ there\ are\ no\ balloons\ left,\ this\ game\ is\ over.\n
comment4.params=
comment4.target=double\ score()
comment4.text=\ Compute\ and\ return\ the\ current\ score\:\n\ \ \ \ \ \ \ \ Sum\ of\ the\ sizes\ for\ the\ remaining\ ballons,\ minus\ the\ penalty\n(total\ area\ of\ burst\ balloons)
comment5.params=
comment5.target=int\ countBalloons()
comment5.text=Count\ and\ return\ the\ number\ of\ Balloons\ in\ the\ array
comment6.params=
comment6.target=void\ gameOver()
comment6.text=\ Report\ the\ Score\n\ \ \ \ \ \ \ \ Remember\ score\ if\ greater\ than\ current\ highScore),\nPop\ all\ the\ balloons,\ clear\ the\ screen,\ and\ start\ again
comment7.params=
comment7.target=void\ reportScore()
comment7.text=Report\ the\ score\ in\ the\ scoreArea\ at\ the\ bottom\ of\ the\ window
comment8.params=arguments
comment8.target=void\ main(java.lang.String[])
numComments=9
