#BlueJ class context
comment0.params=
comment0.target=ImageProcessor()
comment0.text=\ Construct\ a\ new\ ImageProcessor\ object\n\ and\ set\ up\ the\ GUI\n
comment1.params=cmd
comment1.target=void\ buttonPerformed(java.lang.String)
comment1.text=Respond\ to\ button\ presses
comment10.params=
comment10.target=void\ fillErase()
comment10.text=\ {Challenge)\n\ \ \ \ Erase\ the\ connected\ region\ of\ the\ image,\ starting\ at\ the\ selected\ point,\n\ \ \ \ with\ values\ within\ 10\ greylevels\ of\ the\ selected\ point.\ \n\ \ \ \ This\ will\ need\ a\ recursive\ helper\ method\ -\ spreadWhite,\ which\ spreads\n\ \ \ \ white\ to\ the\ pixel\ at\ (x,y)\ if\ it\ is\ within\ the\ range\ (min\ to\ max)\ and\ is\n\ \ \ \ not\ already\ white.\ It\ then\ has\ to\ spreadWhite\ to\ each\ of\ its\ four\ neighbours.\n
comment11.params=
comment11.target=void\ computeGreyColours()
comment12.params=grey
comment12.target=java.awt.Color\ greyColor(int)
comment13.params=x\ y
comment13.target=void\ setPos(double,\ double)
comment13.text=Set\ the\ selected\ Row\ and\ Col\ to\ the\ pixel\ on\ the\ mouse\ position\ x,\ y
comment14.params=
comment14.target=void\ redisplayImage()
comment14.text=\ Display\ the\ image\ on\ the\ screen\ with\ each\ pixel\ as\ a\ square\ of\ size\ pixelSize.\n\ \ \ \ To\ speed\ it\ up,\ all\ the\ possible\ colours\ from\ 0\ -\ 255\ have\ been\ precalculated.\n
comment15.params=imageName
comment15.target=int[][]\ loadImage(java.lang.String)
comment15.text=\ Get\ and\ return\ an\ image\ as\ a\ two-dimensional\ grey-scale\ image\ (from\ 0-255).\ \n\ \ \ \ \ \ \ \ This\ method\ will\ cause\ the\ image\ to\ be\ returned\ as\ a\ grey-scale\ image,\n\ \ \ \ \ \ \ \ regardless\ of\ the\ original\ colouration.\n
comment16.params=
comment16.target=void\ saveImage()
comment16.text=\n\ \ \ \ \ \ \ Write\ the\ current\ greyscale\ image\ to\ the\ specified\ filename\n
comment17.params=arguments
comment17.target=void\ main(java.lang.String[])
comment2.params=action\ x\ y
comment2.target=void\ mousePerformed(java.lang.String,\ double,\ double)
comment2.text=Respond\ to\ mouse\ events
comment3.params=
comment3.target=void\ lightenImage()
comment3.text=\ Make\ all\ pixels\ in\ the\ image\ lighter\ by\ 20\ greylevels.\n\ \ \ \ but\ make\ sure\ that\ you\ never\ go\ over\ 255\ (maximum\ level\ -\ white).\n
comment4.params=
comment4.target=void\ contrastImage()
comment4.text=\ Increase\ the\ contrast\ of\ the\ image\ -\n\ \ \ \ make\ all\ lighter\ pixels\ in\ the\ image\ (above\ 128)\ even\ lighter\ (by\ 20%)\n\ \ \ \ and\ make\ all\ darker\ pixels\ even\ darker\ (by\ 20%)\n
comment5.params=
comment5.target=void\ flipImage()
comment5.text=\ Flip\ the\ image\ vertically\n\ \ \ \ exchange\ the\ values\ on\ the\ top\ half\ of\ the\ image\n\ \ \ \ with\ the\ values\ on\ the\ bottom\ half\n
comment6.params=
comment6.target=void\ expandImage()
comment6.text=\ Expand\ the\ top\ left\ quarter\ of\ the\ image\ to\ fill\ the\ whole\ image\n\ \ \ \ each\ pixel\ in\ the\ top\ left\ quarter\ will\ be\ copied\ to\ four\ pixels\n\ \ \ \ in\ the\ new\ image.\n\ \ \ \ Be\ careful\ not\ to\ try\ to\ access\ elements\ past\ the\ edge\ of\ the\ array\!\n\ \ \ \ Hint\:\ It\ is\ actually\ easier\ to\ work\ backwards\ from\ the\ bottom\ right\ corner.\n
comment7.params=
comment7.target=void\ fadeImage()
comment7.text=\ Fade\ the\ image\n\ \ \ \ Ask\ the\ user\ to\ select\ another\ image\ file,\ and\ load\ it\ into\ another\ array.\n\ \ \ \ \ \ \ \ Check\ that\ the\ other\ image\ is\ the\ same\ size\ as\ the\ current\ image.\n\ \ \ \ \ \ \ \ Replace\ each\ pixel\ value\ in\ the\ current\ image\ by\ a\ weighted\ combination\ of\ the\n\ \ \ \ current\ pixel\ value\ and\ the\ corresponding\ pixel\ value\ in\ the\ other\ image\:\n\ \ \ \ value\ <\=\ \ (int)\ (weight\ *\ currentpixel\ +\ (1-weight)\ *\ otherpixel)\n\ \ \ \ \ \ \ \ The\ weight\ should\ be\ 0.0\ for\ pixels\ on\ the\ top\ edge\ and\ 1.0\ for\ pixels\n\ \ \ \ on\ the\ bottom\ edge,\ and\ should\ change\ smoothly\ between.\n
comment8.params=
comment8.target=void\ zoomImage()
comment8.text=\ Zoom\ in\ on\ the\ image,\ expanding\ by\ 133%,\ centered\ on\ the\ currently\n\ \ \ \ selected\ pixel.\n\ \ \ \ (The\ user\ can\ use\ the\ mouse\ to\ select\ a\ pixel\ which\ will\ be\ highlighted)\n\ \ \ \ Hint\:\ the\ selected\ pixel\ should\ stay\ where\ it\ is,\ and\ other\ pixels\ should\ be\n\ \ \ \ moved\ away\ from\ it\ by\ a\ factor\ or\ 4/3.\n\ \ \ \ Be\ careful\ not\ to\ try\ to\ access\ elements\ past\ the\ edge\ of\ the\ array\!\n\ \ \ \ Be\ careful\ not\ to\ leave\ gaps\ in\ the\ image.\n\ \ \ \ Hint\:\ It\ is\ easier\ to\ make\ a\ new\ array,\ copy\ the\ image\ over,\ expanding\ as\ you\ go\n\ \ \ \ and\ then\ assign\ the\ new\ array\ to\ the\ image\ field.\n
comment9.params=
comment9.target=void\ blurImage()
comment9.text=\ Blur\ the\ image\ \n\ \ \ \ Modify\ each\ pixel\ to\ make\ it\ a\ weighted\ average\ of\ itself\ and\n\ \ \ \ the\ pixels\ around\ it\n\ \ \ \ A\ simple\ blur\ will\ weight\ the\ pixel\ by\ 0.4,\ its\ horizontal\ and\ vertical\n\ \ \ \ \ \ \ \ neighbours\ by\ 0.1,\ and\ the\ diagonal\ neighbours\ by\ 0.05.\n\ \ \ \ Hint\:\ It\ is\ easier\ to\ make\ a\ new\ image\ array\ of\ the\ same\ size\ as\ the\ image,\n\ \ \ \ then\ work\ out\ the\ weighted\ averages\ in\ the\ new\ array,\n\ \ \ \ and\ then\ assign\ the\ new\ array\ to\ the\ image\ field.\n
numComments=18
